const { PrismaClient } = require('@prisma/client')

const prisma = new PrismaClient()

async function checkData() {
  console.log('üìä –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–∞–Ω–Ω—ã—Ö –≤ –±–∞–∑–µ...')

  try {
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏–¥–µ–∏
    const ideas = await prisma.idea.findMany({
      where: { deletedAt: null },
      include: {
        creator: { select: { name: true, email: true } },
        hypotheses: {
          include: {
            experiments: true
          }
        }
      }
    })

    console.log(`üí° –ò–¥–µ–π –Ω–∞–π–¥–µ–Ω–æ: ${ideas.length}`)
    ideas.forEach(idea => {
      console.log(`  - ${idea.title} (—Å—Ç–∞—Ç—É—Å: ${idea.status})`)
      console.log(`    –°–æ–∑–¥–∞—Ç–µ–ª—å: ${idea.creator.name} (${idea.creator.email})`)
      console.log(`    –ì–∏–ø–æ—Ç–µ–∑: ${idea.hypotheses.length}`)
    })

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –≥–∏–ø–æ—Ç–µ–∑—ã
    const hypotheses = await prisma.hypothesis.findMany({
      where: { deletedAt: null },
      include: {
        idea: { select: { title: true } },
        creator: { select: { name: true } },
        experiments: true
      }
    })

    console.log(`\nüî¨ –ì–∏–ø–æ—Ç–µ–∑ –Ω–∞–π–¥–µ–Ω–æ: ${hypotheses.length}`)
    hypotheses.forEach(hyp => {
      console.log(`  - ${hyp.title} (—Å—Ç–∞—Ç—É—Å: ${hyp.status})`)
      console.log(`    –ò–¥–µ—è: ${hyp.idea ? hyp.idea.title : '–ù–ï–¢ –°–í–Ø–ó–ò!'}`)
      console.log(`    –°–æ–∑–¥–∞—Ç–µ–ª—å: ${hyp.creator.name}`)
      console.log(`    –≠–∫—Å–ø–µ—Ä–∏–º–µ–Ω—Ç–æ–≤: ${hyp.experiments.length}`)
    })

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —ç–∫—Å–ø–µ—Ä–∏–º–µ–Ω—Ç—ã
    const experiments = await prisma.experiment.findMany({
      where: { deletedAt: null },
      include: {
        hypothesis: {
          select: {
            title: true,
            idea: { select: { title: true } }
          }
        },
        creator: { select: { name: true } }
      }
    })

    console.log(`\n‚öóÔ∏è –≠–∫—Å–ø–µ—Ä–∏–º–µ–Ω—Ç–æ–≤ –Ω–∞–π–¥–µ–Ω–æ: ${experiments.length}`)
    experiments.forEach(exp => {
      console.log(`  - ${exp.title} (—Å—Ç–∞—Ç—É—Å: ${exp.status})`)
      console.log(`    –ì–∏–ø–æ—Ç–µ–∑–∞: ${exp.hypothesis ? exp.hypothesis.title : '–ù–ï–¢ –°–í–Ø–ó–ò!'}`)
      console.log(`    –ò–¥–µ—è: ${exp.hypothesis?.idea ? exp.hypothesis.idea.title : '–ù–ï–¢ –°–í–Ø–ó–ò!'}`)
    })

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
    const users = await prisma.user.findMany()
    console.log(`\nüë§ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: ${users.length}`)
    users.forEach(user => {
      console.log(`  - ${user.name} (${user.email}) - —Ä–æ–ª—å: ${user.role}`)
    })

  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ –¥–∞–Ω–Ω—ã—Ö:', error)
  } finally {
    await prisma.$disconnect()
  }
}

checkData()