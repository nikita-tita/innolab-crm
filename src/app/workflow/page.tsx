"use client";

import { useState, useEffect } from "react";
import { Card, CardHeader, CardTitle, CardContent } from "@/components/ui/card";
import { Button } from "@/components/ui/button";
import { KanbanBoard } from "@/components/ui/kanban-board";
import { Plus, Filter, Settings } from "lucide-react";

// –¢–∏–ø—ã –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –≤–æ—Ä–æ–Ω–∫–∏
interface WorkflowItem {
  id: string;
  title: string;
  description?: string;
  type: "idea" | "hypothesis";
  priority?: "LOW" | "MEDIUM" | "HIGH" | "CRITICAL";
  riceScore?: number;
  assignee?: string;
  tags?: string[];
  createdAt: Date;
  status: string;
}

const ideaStages = [
  {
    id: "new",
    title: "üí° –ë–∞–Ω–∫ –∏–¥–µ–π",
    description: "–°–±–æ—Ä –∏ —Ñ–∏–∫—Å–∞—Ü–∏—è –∏–¥–µ–π",
    color: "bg-blue-50",
    items: []
  },
  {
    id: "scored",
    title: "üìä RICE-—Å–∫–æ—Ä–∏–Ω–≥",
    description: "–ü—Ä–∏–æ—Ä–∏—Ç–∏–∑–∞—Ü–∏—è –∏–¥–µ–π",
    color: "bg-yellow-50",
    items: []
  },
  {
    id: "selected",
    title: "‚úÖ –û—Ç–æ–±—Ä–∞–Ω–Ω—ã–µ –∏–¥–µ–∏",
    description: "–ì–æ—Ç–æ–≤—ã –∫ –ø—Ä–µ–≤—Ä–∞—â–µ–Ω–∏—é –≤ –≥–∏–ø–æ—Ç–µ–∑—ã",
    color: "bg-green-50",
    items: []
  }
];

const hypothesisStages = [
  {
    id: "draft",
    title: "üî¨ –§–æ—Ä–º—É–ª–∏—Ä–æ–≤–∞–Ω–∏–µ",
    description: "–ü—Ä–µ–≤—Ä–∞—â–µ–Ω–∏–µ –∏–¥–µ–π –≤ –≥–∏–ø–æ—Ç–µ–∑—ã",
    color: "bg-purple-50",
    items: []
  },
  {
    id: "scored",
    title: "üìä –ü—Ä–∏–æ—Ä–∏—Ç–∏–∑–∞—Ü–∏—è",
    description: "RICE-–æ—Ü–µ–Ω–∫–∞ –≥–∏–ø–æ—Ç–µ–∑",
    color: "bg-yellow-50",
    items: []
  },
  {
    id: "desk_research",
    title: "üîç Desk Research",
    description: "–ö–∞–±–∏–Ω–µ—Ç–Ω—ã–µ –∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏—è",
    color: "bg-indigo-50",
    items: []
  },
  {
    id: "experiment_design",
    title: "üéØ –î–∏–∑–∞–π–Ω —ç–∫—Å–ø–µ—Ä–∏–º–µ–Ω—Ç–∞",
    description: "–ü–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ MVP/—Ç–µ—Å—Ç–∞",
    color: "bg-pink-50",
    items: []
  },
  {
    id: "in_experiment",
    title: "üß™ –≠–∫—Å–ø–µ—Ä–∏–º–µ–Ω—Ç",
    description: "–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ MVP",
    color: "bg-orange-50",
    items: []
  },
  {
    id: "analysis",
    title: "üìà –ê–Ω–∞–ª–∏–∑ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤",
    description: "–í—ã–≤–æ–¥—ã –∏ —Ä–µ—à–µ–Ω–∏—è",
    color: "bg-emerald-50",
    items: []
  }
];

export default function WorkflowPage() {
  const [activeTab, setActiveTab] = useState<"ideas" | "hypotheses">("ideas");
  const [stages, setStages] = useState(ideaStages);

  // –ú–æ–∫–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ - –∏–¥–µ–∏ –¥–ª—è –Ω–æ–≤—ã—Ö –ø—Ä–æ–¥—É–∫—Ç–æ–≤
  const mockIdeas: WorkflowItem[] = [
    {
      id: "1",
      title: "–°–µ—Ä–≤–∏—Å –∞—Ä–µ–Ω–¥—ã –∞–≤—Ç–æ–º–æ–±–∏–ª–µ–π –ø–æ –ø–æ–¥–ø–∏—Å–∫–µ",
      description: "–ú–µ—Å—è—á–Ω–∞—è –ø–æ–¥–ø–∏—Å–∫–∞ –Ω–∞ –¥–æ—Å—Ç—É–ø –∫ —Ñ–ª–æ—Ç—É –∞–≤—Ç–æ–º–æ–±–∏–ª–µ–π –±–µ–∑ –ø–æ–∫—É–ø–∫–∏",
      type: "idea",
      priority: "HIGH",
      riceScore: 15.2,
      assignee: "–ú–∞—Ä–∏—è –ö–æ–∑–ª–æ–≤–∞",
      tags: ["–º–æ–±–∏–ª—å–Ω–æ—Å—Ç—å", "–ø–æ–¥–ø–∏—Å–∫–∞", "–∫–∞—Ä—à–µ—Ä–∏–Ω–≥"],
      createdAt: new Date(),
      status: "new"
    },
    {
      id: "2",
      title: "–ü–ª–∞—Ç—Ñ–æ—Ä–º–∞ –¥–ª—è —É–¥–∞–ª–µ–Ω–Ω–æ–π —Ä–∞–±–æ—Ç—ã –∫–æ–º–∞–Ω–¥",
      description: "–í—Å–µ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã –¥–ª—è —É–¥–∞–ª–µ–Ω–Ω–æ–π —Ä–∞–±–æ—Ç—ã –≤ –æ–¥–Ω–æ–º –º–µ—Å—Ç–µ",
      type: "idea",
      priority: "MEDIUM",
      riceScore: 11.7,
      assignee: "–ê–ª–µ–∫—Å–µ–π –ò–≤–∞–Ω–æ–≤",
      tags: ["—É–¥–∞–ª–µ–Ω–∫–∞", "SaaS", "productivity"],
      createdAt: new Date(),
      status: "scored"
    },
    {
      id: "3",
      title: "AI-–ø–æ–º–æ—â–Ω–∏–∫ –¥–ª—è –º–∞–ª–æ–≥–æ –±–∏–∑–Ω–µ—Å–∞",
      description: "–ê–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏—è —Ä—É—Ç–∏–Ω–Ω—ã—Ö –∑–∞–¥–∞—á –ò–ü —á–µ—Ä–µ–∑ —á–∞—Ç-–±–æ—Ç–∞",
      type: "idea",
      priority: "HIGH",
      riceScore: 13.4,
      assignee: "–û–ª—å–≥–∞ –ü–µ—Ç—Ä–æ–≤–∞",
      tags: ["AI", "–º–∞–ª—ã–π –±–∏–∑–Ω–µ—Å", "–∞–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏—è"],
      createdAt: new Date(),
      status: "selected"
    }
  ];

  const mockHypotheses: WorkflowItem[] = [
    {
      id: "h1",
      title: "–ï—Å–ª–∏ –∑–∞–ø—É—Å—Ç–∏—Ç—å MVP –∫–∞—Ä—à–µ—Ä–∏–Ω–≥–∞ –ø–æ –ø–æ–¥–ø–∏—Å–∫–µ, —Ç–æ 500+ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –ø–æ–¥–ø–∏—à—É—Ç—Å—è –≤ –ø–µ—Ä–≤—ã–π –º–µ—Å—è—Ü",
      description: "–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–ø—Ä–æ—Å–∞ –Ω–∞ –∫–∞—Ä—à–µ—Ä–∏–Ω–≥ –ø–æ –ø–æ–¥–ø–∏—Å–∫–µ –≤ –ú–æ—Å–∫–≤–µ",
      type: "hypothesis",
      priority: "HIGH",
      riceScore: 15.2,
      assignee: "–ú–∞—Ä–∏—è –ö–æ–∑–ª–æ–≤–∞",
      tags: ["–∫–∞—Ä—à–µ—Ä–∏–Ω–≥", "MVP", "—Å–ø—Ä–æ—Å"],
      createdAt: new Date(),
      status: "desk_research"
    },
    {
      id: "h2",
      title: "–ï—Å–ª–∏ —Å–æ–∑–¥–∞—Ç—å —á–∞—Ç-–±–æ—Ç –¥–ª—è –ò–ü, —Ç–æ 30% –ø–æ–ø—Ä–æ–±—É—é—Ç –µ–≥–æ –≤ —Ç–µ—á–µ–Ω–∏–µ –Ω–µ–¥–µ–ª–∏",
      description: "–ü—Ä–æ–≤–µ—Ä–∫–∞ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ –ò–ü –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å AI-–ø–æ–º–æ—â–Ω–∏–∫–∞",
      type: "hypothesis",
      priority: "MEDIUM",
      riceScore: 12.8,
      assignee: "–û–ª—å–≥–∞ –ü–µ—Ç—Ä–æ–≤–∞",
      tags: ["AI", "–ò–ü", "adoption"],
      createdAt: new Date(),
      status: "experiment_design"
    },
    {
      id: "h3",
      title: "–ï—Å–ª–∏ —Å–æ–∑–¥–∞—Ç—å –±–∞–∑–æ–≤—É—é –ø–ª–∞—Ç—Ñ–æ—Ä–º—É –¥–ª—è –∫–æ–º–∞–Ω–¥, —Ç–æ 100 –∫–æ–º–∞–Ω–¥ –ø—Ä–æ—Ç–µ—Å—Ç–∏—Ä—É—é—Ç –∑–∞ –º–µ—Å—è—Ü",
      description: "–í–∞–ª–∏–¥–∞—Ü–∏—è –ø–æ—Ç—Ä–µ–±–Ω–æ—Å—Ç–∏ –≤ –Ω–æ–≤–æ–π –ø–ª–∞—Ç—Ñ–æ—Ä–º–µ –¥–ª—è —É–¥–∞–ª–µ–Ω–Ω–æ–π —Ä–∞–±–æ—Ç—ã",
      type: "hypothesis",
      priority: "HIGH",
      riceScore: 11.5,
      assignee: "–ê–ª–µ–∫—Å–µ–π –ò–≤–∞–Ω–æ–≤",
      tags: ["remote work", "MVP", "validation"],
      createdAt: new Date(),
      status: "in_experiment"
    }
  ];

  useEffect(() => {
    // –†–∞—Å–ø—Ä–µ–¥–µ–ª—è–µ–º —ç–ª–µ–º–µ–Ω—Ç—ã –ø–æ —ç—Ç–∞–ø–∞–º
    const items = activeTab === "ideas" ? mockIdeas : mockHypotheses;
    const currentStages = activeTab === "ideas" ? ideaStages : hypothesisStages;

    const updatedStages = currentStages.map(stage => ({
      ...stage,
      items: items.filter(item => item.status === stage.id)
    }));

    setStages(updatedStages);
  }, [activeTab]);

  const handleItemMove = (itemId: string, fromColumn: string, toColumn: string) => {
    console.log(`Moving ${itemId} from ${fromColumn} to ${toColumn}`);
    // –ó–¥–µ—Å—å –±—É–¥–µ—Ç API –≤—ã–∑–æ–≤ –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Å—Ç–∞—Ç—É—Å–∞
  };

  const handleItemClick = (item: WorkflowItem) => {
    // –ü–µ—Ä–µ—Ö–æ–¥ –∫ –¥–µ—Ç–∞–ª—å–Ω–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü–µ —ç–ª–µ–º–µ–Ω—Ç–∞
    if (item.type === "hypothesis") {
      window.location.href = `/hypotheses/${item.id}`;
    } else if (item.type === "idea") {
      window.location.href = `/ideas/${item.id}`;
    }
  };

  const handleAddItem = (columnId: string) => {
    console.log("Add item to column:", columnId);
    // –û—Ç–∫—Ä—ã—Ç–∏–µ –º–æ–¥–∞–ª–∞ —Å–æ–∑–¥–∞–Ω–∏—è –Ω–æ–≤–æ–≥–æ —ç–ª–µ–º–µ–Ω—Ç–∞
  };

  return (
    <div className="container mx-auto py-6 space-y-6">
      {/* –ó–∞–≥–æ–ª–æ–≤–æ–∫ */}
      <div className="text-center">
        <h1 className="text-3xl font-bold">–í–æ—Ä–æ–Ω–∫–∞ –ø—Ä–æ—Ü–µ—Å—Å–∞</h1>
        <p className="text-gray-600 mt-2">
          8-—ç—Ç–∞–ø–Ω–∞—è –º–µ—Ç–æ–¥–æ–ª–æ–≥–∏—è –¥–ª—è –∑–∞–ø—É—Å–∫–∞ –Ω–æ–≤—ã—Ö –ø—Ä–æ–¥—É–∫—Ç–æ–≤
        </p>
        <p className="text-sm text-gray-500 mt-1">
          –û—Ç –∏–¥–µ–∏ –¥–æ —Ä–∞–±–æ—Ç–∞—é—â–µ–≥–æ –ø—Ä–æ–¥—É–∫—Ç–∞ —á–µ—Ä–µ–∑ –±—ã—Å—Ç—Ä—ã–µ —ç–∫—Å–ø–µ—Ä–∏–º–µ–Ω—Ç—ã
        </p>
      </div>

      {/* –ü–µ—Ä–µ–∫–ª—é—á–∞—Ç–µ–ª—å –≤–∫–ª–∞–¥–æ–∫ */}
      <Card>
        <CardContent className="p-0">
          <div className="flex border-b">
            <button
              className={`px-6 py-4 font-medium ${
                activeTab === "ideas"
                  ? "border-b-2 border-blue-500 text-blue-600 bg-blue-50"
                  : "text-gray-500 hover:text-gray-700"
              }`}
              onClick={() => setActiveTab("ideas")}
            >
              üí° –≠—Ç–∞–ø—ã 1-3: –û—Ç –∏–¥–µ–π –∫ –≥–∏–ø–æ—Ç–µ–∑–∞–º
            </button>
            <button
              className={`px-6 py-4 font-medium ${
                activeTab === "hypotheses"
                  ? "border-b-2 border-blue-500 text-blue-600 bg-blue-50"
                  : "text-gray-500 hover:text-gray-700"
              }`}
              onClick={() => setActiveTab("hypotheses")}
            >
              üî¨ –≠—Ç–∞–ø—ã 4-8: –û—Ç –≥–∏–ø–æ—Ç–µ–∑ –∫ –ø—Ä–æ–¥—É–∫—Ç—É
            </button>
          </div>
        </CardContent>
      </Card>


      {/* –ö–∞–Ω–±–∞–Ω-–¥–æ—Å–∫–∞ */}
      <KanbanBoard
        columns={stages}
        onItemMove={handleItemMove}
        onItemClick={handleItemClick}
        onAddItem={handleAddItem}
        showRiceScore={true}
      />

    </div>
  );
}