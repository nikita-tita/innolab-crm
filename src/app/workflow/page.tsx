"use client";

import { useState, useEffect } from "react";
import { Card, CardHeader, CardTitle, CardContent } from "@/components/ui/card";
import { Button } from "@/components/ui/button";
import { KanbanBoard } from "@/components/ui/kanban-board";
import { Plus, Filter, Settings } from "lucide-react";

// –¢–∏–ø—ã –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –≤–æ—Ä–æ–Ω–∫–∏
interface WorkflowItem {
  id: string;
  title: string;
  description?: string;
  type: "idea" | "hypothesis";
  priority?: "LOW" | "MEDIUM" | "HIGH" | "CRITICAL";
  riceScore?: number;
  assignee?: string;
  tags?: string[];
  createdAt: Date;
  status: string;
}

const ideaStages = [
  {
    id: "new",
    title: "üîç –ë–∞–Ω–∫ –∏–¥–µ–π",
    description: "–ù–æ–≤—ã–µ –∏–¥–µ–∏",
    color: "bg-blue-50",
    items: []
  },
  {
    id: "scored",
    title: "üìä RICE-—Å–∫–æ—Ä–∏–Ω–≥",
    description: "–û—Ü–µ–Ω–∫–∞ –∏–¥–µ–π",
    color: "bg-yellow-50",
    items: []
  },
  {
    id: "selected",
    title: "‚úÖ –û—Ç–æ–±—Ä–∞–Ω–Ω—ã–µ",
    description: "–ì–æ—Ç–æ–≤—ã –∫ –ø—Ä–æ—Ä–∞–±–æ—Ç–∫–µ",
    color: "bg-green-50",
    items: []
  },
  {
    id: "in_hypothesis",
    title: "üî¨ –í —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ",
    description: "–§–æ—Ä–º—É–ª–∏—Ä—É—é—Ç—Å—è –≥–∏–ø–æ—Ç–µ–∑—ã",
    color: "bg-purple-50",
    items: []
  }
];

const hypothesisStages = [
  {
    id: "draft",
    title: "üìù –ß–µ—Ä–Ω–æ–≤–∏–∫–∏",
    description: "–ù–æ–≤—ã–µ –≥–∏–ø–æ—Ç–µ–∑—ã",
    color: "bg-gray-50",
    items: []
  },
  {
    id: "scored",
    title: "üìä RICE-–æ—Ü–µ–Ω–∫–∞",
    description: "–ü—Ä–∏–æ—Ä–∏—Ç–∏–∑–∞—Ü–∏—è",
    color: "bg-yellow-50",
    items: []
  },
  {
    id: "desk_research",
    title: "üîç Desk Research",
    description: "–ö–∞–±–∏–Ω–µ—Ç–Ω—ã–µ –∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏—è",
    color: "bg-blue-50",
    items: []
  },
  {
    id: "ready_for_testing",
    title: "üß™ –ì–æ—Ç–æ–≤—ã –∫ —Ç–µ—Å—Ç—É",
    description: "–ñ–¥—É—Ç —ç–∫—Å–ø–µ—Ä–∏–º–µ–Ω—Ç–∞",
    color: "bg-green-50",
    items: []
  },
  {
    id: "in_experiment",
    title: "‚öóÔ∏è –í —ç–∫—Å–ø–µ—Ä–∏–º–µ–Ω—Ç–µ",
    description: "–¢–µ—Å—Ç–∏—Ä—É—é—Ç—Å—è",
    color: "bg-orange-50",
    items: []
  },
  {
    id: "completed",
    title: "‚úÖ –ó–∞–≤–µ—Ä—à–µ–Ω—ã",
    description: "–†–µ–∑—É–ª—å—Ç–∞—Ç—ã –ø–æ–ª—É—á–µ–Ω—ã",
    color: "bg-emerald-50",
    items: []
  }
];

export default function WorkflowPage() {
  const [activeTab, setActiveTab] = useState<"ideas" | "hypotheses">("ideas");
  const [stages, setStages] = useState(ideaStages);

  // –ú–æ–∫–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ
  const mockIdeas: WorkflowItem[] = [
    {
      id: "1",
      title: "–ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π –¥–æ–∑–≤–æ–Ω –∫–ª–∏–µ–Ω—Ç–∞–º",
      description: "–°–∏—Å—Ç–µ–º–∞ –∞–≤—Ç–æ–¥–æ–∑–≤–æ–Ω–∞ –¥–ª—è –ø–æ–≤—ã—à–µ–Ω–∏—è –∫–æ–Ω–≤–µ—Ä—Å–∏–∏",
      type: "idea",
      priority: "HIGH",
      riceScore: 12.5,
      assignee: "–ò–≤–∞–Ω –ü–µ—Ç—Ä–æ–≤",
      tags: ["–º–∞—Ä–∫–µ—Ç–∏–Ω–≥", "–∞–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏—è"],
      createdAt: new Date(),
      status: "new"
    },
    {
      id: "2",
      title: "–ü–µ—Ä—Å–æ–Ω–∞–ª–∏–∑–∞—Ü–∏—è —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–π",
      description: "ML-–∞–ª–≥–æ—Ä–∏—Ç–º –¥–ª—è –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã—Ö –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–π",
      type: "idea",
      priority: "MEDIUM",
      riceScore: 8.3,
      assignee: "–ê–Ω–Ω–∞ –°–∏–¥–æ—Ä–æ–≤–∞",
      tags: ["ML", "–ø–µ—Ä—Å–æ–Ω–∞–ª–∏–∑–∞—Ü–∏—è"],
      createdAt: new Date(),
      status: "scored"
    }
  ];

  const mockHypotheses: WorkflowItem[] = [
    {
      id: "h1",
      title: "–ï—Å–ª–∏ –¥–æ–±–∞–≤–∏—Ç—å –∞–≤—Ç–æ–¥–æ–∑–≤–æ–Ω, —Ç–æ –∫–æ–Ω–≤–µ—Ä—Å–∏—è –≤—ã—Ä–∞—Å—Ç–µ—Ç –Ω–∞ 15%",
      description: "–ü—Ä–æ–≤–µ—Ä–∫–∞ —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ –¥–æ–∑–≤–æ–Ω–∞",
      type: "hypothesis",
      priority: "HIGH",
      riceScore: 15.2,
      assignee: "–ú–∞—Ä–∏—è –ö–æ–∑–ª–æ–≤–∞",
      tags: ["–∫–æ–Ω–≤–µ—Ä—Å–∏—è", "–ø—Ä–æ–¥–∞–∂–∏"],
      createdAt: new Date(),
      status: "desk_research"
    },
    {
      id: "h2",
      title: "–ï—Å–ª–∏ —É–ø—Ä–æ—Å—Ç–∏—Ç—å —Ñ–æ—Ä–º—É —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏, —Ç–æ –±–æ–ª—å—à–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ—Ç—Å—è",
      description: "–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —É–ø—Ä–æ—â–µ–Ω–Ω–æ–π —Ñ–æ—Ä–º—ã —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏",
      type: "hypothesis",
      priority: "MEDIUM",
      riceScore: 9.1,
      assignee: "–ü–µ—Ç—Ä –ò–≤–∞–Ω–æ–≤",
      tags: ["UX", "—Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è"],
      createdAt: new Date(),
      status: "ready_for_testing"
    }
  ];

  useEffect(() => {
    // –†–∞—Å–ø—Ä–µ–¥–µ–ª—è–µ–º —ç–ª–µ–º–µ–Ω—Ç—ã –ø–æ —ç—Ç–∞–ø–∞–º
    const items = activeTab === "ideas" ? mockIdeas : mockHypotheses;
    const currentStages = activeTab === "ideas" ? ideaStages : hypothesisStages;

    const updatedStages = currentStages.map(stage => ({
      ...stage,
      items: items.filter(item => item.status === stage.id)
    }));

    setStages(updatedStages);
  }, [activeTab]);

  const handleItemMove = (itemId: string, fromColumn: string, toColumn: string) => {
    console.log(`Moving ${itemId} from ${fromColumn} to ${toColumn}`);
    // –ó–¥–µ—Å—å –±—É–¥–µ—Ç API –≤—ã–∑–æ–≤ –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Å—Ç–∞—Ç—É—Å–∞
  };

  const handleItemClick = (item: WorkflowItem) => {
    // –ü–µ—Ä–µ—Ö–æ–¥ –∫ –¥–µ—Ç–∞–ª—å–Ω–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü–µ —ç–ª–µ–º–µ–Ω—Ç–∞
    if (item.type === "hypothesis") {
      window.location.href = `/hypotheses/${item.id}`;
    } else if (item.type === "idea") {
      window.location.href = `/ideas/${item.id}`;
    }
  };

  const handleAddItem = (columnId: string) => {
    console.log("Add item to column:", columnId);
    // –û—Ç–∫—Ä—ã—Ç–∏–µ –º–æ–¥–∞–ª–∞ —Å–æ–∑–¥–∞–Ω–∏—è –Ω–æ–≤–æ–≥–æ —ç–ª–µ–º–µ–Ω—Ç–∞
  };

  return (
    <div className="container mx-auto py-6 space-y-6">
      {/* –ó–∞–≥–æ–ª–æ–≤–æ–∫ –∏ –Ω–∞–≤–∏–≥–∞—Ü–∏—è */}
      <div className="flex items-center justify-between">
        <div>
          <h1 className="text-3xl font-bold">–í–æ—Ä–æ–Ω–∫–∞ –ø—Ä–æ—Ü–µ—Å—Å–∞</h1>
          <p className="text-gray-600 mt-2">
            –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∂–∏–∑–Ω–µ–Ω–Ω—ã–º —Ü–∏–∫–ª–æ–º –∏–¥–µ–π –∏ –≥–∏–ø–æ—Ç–µ–∑
          </p>
        </div>

        <div className="flex gap-2">
          <Button variant="outline" size="sm">
            <Filter className="h-4 w-4 mr-2" />
            –§–∏–ª—å—Ç—Ä—ã
          </Button>
          <Button variant="outline" size="sm">
            <Settings className="h-4 w-4 mr-2" />
            –ù–∞—Å—Ç—Ä–æ–π–∫–∏
          </Button>
          <Button size="sm">
            <Plus className="h-4 w-4 mr-2" />
            –î–æ–±–∞–≤–∏—Ç—å
          </Button>
        </div>
      </div>

      {/* –ü–µ—Ä–µ–∫–ª—é—á–∞—Ç–µ–ª—å –≤–∫–ª–∞–¥–æ–∫ */}
      <Card>
        <CardContent className="p-0">
          <div className="flex border-b">
            <button
              className={`px-6 py-4 font-medium ${
                activeTab === "ideas"
                  ? "border-b-2 border-blue-500 text-blue-600 bg-blue-50"
                  : "text-gray-500 hover:text-gray-700"
              }`}
              onClick={() => setActiveTab("ideas")}
            >
              üí° –í–æ—Ä–æ–Ω–∫–∞ –∏–¥–µ–π
            </button>
            <button
              className={`px-6 py-4 font-medium ${
                activeTab === "hypotheses"
                  ? "border-b-2 border-blue-500 text-blue-600 bg-blue-50"
                  : "text-gray-500 hover:text-gray-700"
              }`}
              onClick={() => setActiveTab("hypotheses")}
            >
              üî¨ –í–æ—Ä–æ–Ω–∫–∞ –≥–∏–ø–æ—Ç–µ–∑
            </button>
          </div>
        </CardContent>
      </Card>

      {/* –û–ø–∏—Å–∞–Ω–∏–µ —Ç–µ–∫—É—â–µ–≥–æ —ç—Ç–∞–ø–∞ */}
      <Card>
        <CardContent className="p-4">
          {activeTab === "ideas" ? (
            <div>
              <h3 className="font-semibold text-lg mb-2">–≠—Ç–∞–ø—ã —Ä–∞–±–æ—Ç—ã —Å –∏–¥–µ—è–º–∏</h3>
              <ol className="text-sm text-gray-600 space-y-1">
                <li><strong>1. –ë–∞–Ω–∫ –∏–¥–µ–π:</strong> –°–±–æ—Ä –∏ —Ñ–∏–∫—Å–∞—Ü–∏—è –≤—Å–µ—Ö –∏–¥–µ–π –∫–æ–º–∞–Ω–¥—ã</li>
                <li><strong>2. RICE-—Å–∫–æ—Ä–∏–Ω–≥:</strong> –ü—Ä–∏–æ—Ä–∏—Ç–∏–∑–∞—Ü–∏—è –ø–æ —Ñ–æ—Ä–º—É–ª–µ (Reach √ó Impact √ó Confidence) √∑ Effort</li>
                <li><strong>3. –û—Ç–æ–±—Ä–∞–Ω–Ω—ã–µ:</strong> –ò–¥–µ–∏ —Å –≤—ã—Å–æ–∫–∏–º –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç–æ–º, –≥–æ—Ç–æ–≤—ã–µ –∫ –ø—Ä–æ—Ä–∞–±–æ—Ç–∫–µ</li>
                <li><strong>4. –í —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ:</strong> –§–æ—Ä–º—É–ª–∏—Ä–æ–≤–∞–Ω–∏–µ –ø—Ä–æ–≤–µ—Ä—è–µ–º—ã—Ö –≥–∏–ø–æ—Ç–µ–∑ –Ω–∞ –æ—Å–Ω–æ–≤–µ –∏–¥–µ–π</li>
              </ol>
            </div>
          ) : (
            <div>
              <h3 className="font-semibold text-lg mb-2">–≠—Ç–∞–ø—ã —Ä–∞–±–æ—Ç—ã —Å –≥–∏–ø–æ—Ç–µ–∑–∞–º–∏</h3>
              <ol className="text-sm text-gray-600 space-y-1">
                <li><strong>1. –ß–µ—Ä–Ω–æ–≤–∏–∫–∏:</strong> –§–æ—Ä–º—É–ª–∏—Ä–æ–≤–∫–∞ –≤ —Ñ–æ—Ä–º–∞—Ç–µ "–ï—Å–ª–∏ X, —Ç–æ Y, –ø–æ—Ç–æ–º—É —á—Ç–æ Z"</li>
                <li><strong>2. RICE-–æ—Ü–µ–Ω–∫–∞:</strong> –ü—Ä–∏–æ—Ä–∏—Ç–∏–∑–∞—Ü–∏—è —ç–∫—Å–ø–µ—Ä–∏–º–µ–Ω—Ç–æ–≤</li>
                <li><strong>3. Desk Research:</strong> –ö–∞–±–∏–Ω–µ—Ç–Ω—ã–µ –∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏—è –∏ –∞–Ω–∞–ª–∏–∑ –¥–∞–Ω–Ω—ã—Ö</li>
                <li><strong>4. –ì–æ—Ç–æ–≤—ã –∫ —Ç–µ—Å—Ç—É:</strong> –ü–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ —ç–∫—Å–ø–µ—Ä–∏–º–µ–Ω—Ç–æ–≤</li>
                <li><strong>5. –í —ç–∫—Å–ø–µ—Ä–∏–º–µ–Ω—Ç–µ:</strong> –ü—Ä–æ–≤–µ–¥–µ–Ω–∏–µ –∏ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ —Ç–µ—Å—Ç–æ–≤</li>
                <li><strong>6. –ó–∞–≤–µ—Ä—à–µ–Ω—ã:</strong> –ê–Ω–∞–ª–∏–∑ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ –∏ –ø—Ä–∏–Ω—è—Ç–∏–µ —Ä–µ—à–µ–Ω–∏–π</li>
              </ol>
            </div>
          )}
        </CardContent>
      </Card>

      {/* –ö–∞–Ω–±–∞–Ω-–¥–æ—Å–∫–∞ */}
      <KanbanBoard
        columns={stages}
        onItemMove={handleItemMove}
        onItemClick={handleItemClick}
        onAddItem={handleAddItem}
        showRiceScore={true}
      />

      {/* –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ */}
      <div className="grid grid-cols-1 md:grid-cols-4 gap-4">
        <Card>
          <CardContent className="p-4">
            <div className="text-2xl font-bold text-blue-600">
              {stages.reduce((sum, stage) => sum + stage.items.length, 0)}
            </div>
            <div className="text-sm text-gray-600">
              –í—Å–µ–≥–æ {activeTab === "ideas" ? "–∏–¥–µ–π" : "–≥–∏–ø–æ—Ç–µ–∑"}
            </div>
          </CardContent>
        </Card>

        <Card>
          <CardContent className="p-4">
            <div className="text-2xl font-bold text-green-600">
              {stages.find(s => s.id === "completed" || s.id === "in_hypothesis")?.items.length || 0}
            </div>
            <div className="text-sm text-gray-600">
              {activeTab === "ideas" ? "–ó–∞–≤–µ—Ä—à–µ–Ω–Ω—ã—Ö" : "–í —Ä–∞–±–æ—Ç–µ"}
            </div>
          </CardContent>
        </Card>

        <Card>
          <CardContent className="p-4">
            <div className="text-2xl font-bold text-orange-600">
              {stages.find(s => s.id === "in_experiment" || s.id === "scored")?.items.length || 0}
            </div>
            <div className="text-sm text-gray-600">
              {activeTab === "ideas" ? "–ù–∞ –æ—Ü–µ–Ω–∫–µ" : "–í —ç–∫—Å–ø–µ—Ä–∏–º–µ–Ω—Ç–µ"}
            </div>
          </CardContent>
        </Card>

        <Card>
          <CardContent className="p-4">
            <div className="text-2xl font-bold text-purple-600">
              {((stages.find(s => s.id === "completed")?.items.length || 0) /
                Math.max(1, stages.reduce((sum, stage) => sum + stage.items.length, 0)) * 100).toFixed(0)}%
            </div>
            <div className="text-sm text-gray-600">
              –ö–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è
            </div>
          </CardContent>
        </Card>
      </div>
    </div>
  );
}