"use client"

import { useSession } from "next-auth/react"
import { useRouter } from "next/navigation"
import { useEffect, useState } from "react"
import Link from "next/link"
import AppLayout from "@/components/layout/AppLayout"

interface Experiment {
  id: string
  title: string
  description: string
  status: string
  methodology?: string
  startDate?: string
  endDate?: string
  createdAt: string
  hypothesis: {
    title: string
    idea: {
      title: string
    }
  }
  creator: {
    name: string
  }
  mvpsCount: number
  commentsCount: number
}

export default function Experiments() {
  const { data: session, status } = useSession()
  const router = useRouter()
  const [experiments, setExperiments] = useState<Experiment[]>([])
  const [loading, setLoading] = useState(true)
  const [view, setView] = useState<'cards' | 'create'>('cards')
  const [q, setQ] = useState("")
  const [statusFilter, setStatusFilter] = useState<string>("")

  useEffect(() => {
    if (status === "unauthenticated") {
      router.push("/auth/signin")
    }
  }, [status, router])

  useEffect(() => {
    const fetchExperiments = async () => {
      try {
        const params = new URLSearchParams()
        if (statusFilter) params.set('status', statusFilter)
        const response = await fetch('/api/experiments' + (params.size ? `?${params.toString()}` : ''))
        if (response.ok) {
          const data = await response.json()
          const formattedData = data.map((e: unknown) => {
            const experiment = e as {
              id: string;
              title: string;
              description: string;
              status: string;
              methodology?: string;
              startDate?: string;
              endDate?: string;
              createdAt: string;
              hypothesis: {
                title: string;
                idea: { title: string };
              };
              creator: { name: string };
              _count: { mvps: number; comments: number };
            };
            return {
            id: experiment.id,
            title: experiment.title,
            description: experiment.description,
            status: experiment.status,
            methodology: experiment.methodology,
            startDate: experiment.startDate,
            endDate: experiment.endDate,
            createdAt: experiment.createdAt,
            hypothesis: {
              title: experiment.hypothesis.title,
              idea: {
                title: experiment.hypothesis.idea.title
              }
            },
            creator: {
              name: experiment.creator.name
            },
            mvpsCount: experiment._count.mvps,
            commentsCount: experiment._count.comments
          }})
          setExperiments(formattedData)
        } else {
          console.error('Failed to fetch experiments')
        }
      } catch (error) {
        console.error('Error fetching experiments:', error)
      } finally {
        setLoading(false)
      }
    }

    if (status !== "loading") {
      fetchExperiments()
    }
  }, [status, statusFilter])

  const getStatusColor = (status: string) => {
    switch (status) {
      case "PLANNING": return "bg-gray-100 text-gray-800"
      case "RUNNING": return "bg-blue-100 text-blue-800"
      case "PAUSED": return "bg-yellow-100 text-yellow-800"
      case "COMPLETED": return "bg-green-100 text-green-800"
      case "CANCELLED": return "bg-red-100 text-red-800"
      default: return "bg-gray-100 text-gray-800"
    }
  }

  const getStatusText = (status: string) => {
    switch (status) {
      case "PLANNING": return "–ü–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ"
      case "RUNNING": return "–í—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è"
      case "PAUSED": return "–ü—Ä–∏–æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"
      case "COMPLETED": return "–ó–∞–≤–µ—Ä—à–µ–Ω"
      case "CANCELLED": return "–û—Ç–º–µ–Ω–µ–Ω"
      default: return status
    }
  }

  const filtered = experiments.filter(e =>
    (!q || e.title.toLowerCase().includes(q.toLowerCase()) || e.description.toLowerCase().includes(q.toLowerCase()))
  )

  if (status === "loading" || loading) {
    return (
      <div className="min-h-screen bg-gray-50 flex items-center justify-center">
        <div className="text-lg">–ó–∞–≥—Ä—É–∑–∫–∞...</div>
      </div>
    )
  }

  if (!session) {
    return null
  }

  return (
    <AppLayout>
      <main className="max-w-7xl mx-auto py-6 sm:px-6 lg:px-8">
        <div className="px-4 py-6 sm:px-0">
          <div className="flex justify-between items-center mb-6">
            <h1 className="text-2xl font-bold text-gray-900">‚öóÔ∏è –≠–∫—Å–ø–µ—Ä–∏–º–µ–Ω—Ç—ã</h1>
            <div className="flex items-center space-x-4">
              <input value={q} onChange={e=>setQ(e.target.value)} placeholder="–ü–æ–∏—Å–∫..." className="border border-gray-300 rounded-md px-3 py-2 text-sm" />
              <select value={statusFilter} onChange={e=>setStatusFilter(e.target.value)} className="border border-gray-300 rounded-md px-3 py-2 text-sm">
                <option value="">–í—Å–µ —Å—Ç–∞—Ç—É—Å—ã</option>
                <option value="PLANNING">–ü–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ</option>
                <option value="RUNNING">–í—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è</option>
                <option value="PAUSED">–ü–∞—É–∑–∞</option>
                <option value="COMPLETED">–ó–∞–≤–µ—Ä—à—ë–Ω</option>
                <option value="CANCELLED">–û—Ç–º–µ–Ω—ë–Ω</option>
              </select>
              <div className="flex bg-gray-100 rounded-lg p-1">
                <button
                  onClick={() => setView('cards')}
                  className={`px-3 py-1 rounded text-sm font-medium ${
                    view === 'cards'
                      ? 'bg-white text-gray-900 shadow-sm'
                      : 'text-gray-600 hover:text-gray-900'
                  }`}
                >
                  üìã –ö–∞—Ä—Ç–æ—á–∫–∏
                </button>
                <button
                  onClick={() => setView('create')}
                  className={`px-3 py-1 rounded text-sm font-medium ${
                    view === 'create'
                      ? 'bg-white text-gray-900 shadow-sm'
                      : 'text-gray-600 hover:text-gray-900'
                  }`}
                >
                  ‚ûï –°–æ–∑–¥–∞—Ç—å
                </button>
              </div>
            </div>
          </div>

          {/* Info Section */}
          {experiments.length === 0 && (
            <div className="bg-purple-50 border border-purple-200 rounded-lg p-6 mb-6">
              <h2 className="text-lg font-semibold text-purple-900 mb-2">üß™ –ù–∞—á–Ω–∏—Ç–µ —Å –ø–µ—Ä–≤–æ–≥–æ —ç–∫—Å–ø–µ—Ä–∏–º–µ–Ω—Ç–∞!</h2>
              <p className="text-purple-800 mb-4">
                –≠–∫—Å–ø–µ—Ä–∏–º–µ–Ω—Ç—ã ‚Äî —ç—Ç–æ –±—ã—Å—Ç—Ä—ã–µ –∏ –¥–µ—à–µ–≤—ã–µ —Å–ø–æ—Å–æ–±—ã –ø—Ä–æ–≤–µ—Ä–∏—Ç—å –≤–∞—à–∏ –≥–∏–ø–æ—Ç–µ–∑—ã –Ω–∞ –ø—Ä–∞–∫—Ç–∏–∫–µ.
              </p>
              <div className="grid grid-cols-1 md:grid-cols-4 gap-4 text-sm">
                <div className="bg-purple-100 rounded-lg p-3">
                  <h3 className="font-medium text-purple-900 mb-1">–ü–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ</h3>
                  <p className="text-purple-800">–û–ø—Ä–µ–¥–µ–ª–∏—Ç–µ –º–µ—Ç—Ä–∏–∫–∏ –∏ –∫—Ä–∏—Ç–µ—Ä–∏–∏ —É—Å–ø–µ—Ö–∞</p>
                </div>
                <div className="bg-purple-100 rounded-lg p-3">
                  <h3 className="font-medium text-purple-900 mb-1">–í—ã–ø–æ–ª–Ω–µ–Ω–∏–µ</h3>
                  <p className="text-purple-800">–ó–∞–ø—É—Å—Ç–∏—Ç–µ MVP, –ª–µ–Ω–¥–∏–Ω–≥ –∏–ª–∏ –æ–ø—Ä–æ—Å</p>
                </div>
                <div className="bg-purple-100 rounded-lg p-3">
                  <h3 className="font-medium text-purple-900 mb-1">–°–±–æ—Ä –¥–∞–Ω–Ω—ã—Ö</h3>
                  <p className="text-purple-800">–§–∏–∫—Å–∏—Ä—É–π—Ç–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è</p>
                </div>
                <div className="bg-purple-100 rounded-lg p-3">
                  <h3 className="font-medium text-purple-900 mb-1">–í—ã–≤–æ–¥—ã</h3>
                  <p className="text-purple-800">–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç–µ –∏–ª–∏ –æ–ø—Ä–æ–≤–µ—Ä–≥–Ω–∏—Ç–µ –≥–∏–ø–æ—Ç–µ–∑—É</p>
                </div>
              </div>
            </div>
          )}

          {experiments.length > 0 && (
            <div className="bg-indigo-50 border border-indigo-200 rounded-lg p-4 mb-6">
              <div className="flex items-center justify-between">
                <div>
                  <h3 className="text-sm font-medium text-indigo-900">
                    üìä –í—Å–µ–≥–æ —ç–∫—Å–ø–µ—Ä–∏–º–µ–Ω—Ç–æ–≤: {experiments.length}
                  </h3>
                  <p className="text-xs text-indigo-700 mt-1">
                    –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–∞–Ω–±–∞–Ω-–¥–æ—Å–∫—É –¥–ª—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è –ø—Ä–æ–≥—Ä–µ—Å—Å–∞ –∏–ª–∏ –∫–∞—Ä—Ç–æ—á–∫–∏ –¥–ª—è –¥–µ—Ç–∞–ª—å–Ω–æ–≥–æ –ø—Ä–æ—Å–º–æ—Ç—Ä–∞
                  </p>
                </div>
                <Link
                  href="/experiments/new"
                  className="bg-indigo-600 text-white px-3 py-1 rounded text-xs hover:bg-indigo-700"
                >
                  + –î–æ–±–∞–≤–∏—Ç—å —ç–∫—Å–ø–µ—Ä–∏–º–µ–Ω—Ç
                </Link>
              </div>
            </div>
          )}

          {view === 'create' ? (
            <div className="bg-white rounded-xl shadow-lg p-8 max-w-2xl mx-auto">
              <h2 className="text-2xl font-bold text-gray-900 mb-6 text-center">
                ‚öóÔ∏è –°–æ–∑–¥–∞–Ω–∏–µ –Ω–æ–≤–æ–≥–æ —ç–∫—Å–ø–µ—Ä–∏–º–µ–Ω—Ç–∞
              </h2>
              <p className="text-gray-600 text-center mb-8">
                –°–ø–ª–∞–Ω–∏—Ä—É–π—Ç–µ —ç–∫—Å–ø–µ—Ä–∏–º–µ–Ω—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –≤–∞—à–µ–π –≥–∏–ø–æ—Ç–µ–∑—ã
              </p>
              <div className="text-center">
                <Link
                  href="/experiments/new"
                  className="bg-blue-600 text-white px-8 py-4 rounded-lg text-lg font-medium hover:bg-blue-700 transition-colors inline-block"
                >
                  –ü–µ—Ä–µ–π—Ç–∏ –∫ —Ñ–æ—Ä–º–µ —Å–æ–∑–¥–∞–Ω–∏—è
                </Link>
              </div>
              <div className="mt-8 bg-blue-50 rounded-lg p-6">
                <h3 className="font-medium text-blue-900 mb-3">‚öóÔ∏è –¢–∏–ø—ã —ç–∫—Å–ø–µ—Ä–∏–º–µ–Ω—Ç–æ–≤</h3>
                <div className="text-blue-800 text-sm space-y-2">
                  <div className="flex items-center gap-2">
                    <span>üñ•Ô∏è</span>
                    <span><strong>–õ–µ–Ω–¥–∏–Ω–≥-–ø–µ–π–¥–∂</strong> ‚Äî —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∏–Ω—Ç–µ—Ä–µ—Å–∞ –∫ –ø—Ä–æ–¥—É–∫—Ç—É</span>
                  </div>
                  <div className="flex items-center gap-2">
                    <span>üìä</span>
                    <span><strong>A/B —Ç–µ—Å—Ç</strong> ‚Äî —Å—Ä–∞–≤–Ω–µ–Ω–∏–µ –¥–≤—É—Ö –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤ —Ä–µ—à–µ–Ω–∏—è</span>
                  </div>
                  <div className="flex items-center gap-2">
                    <span>üì±</span>
                    <span><strong>MVP</strong> ‚Äî –º–∏–Ω–∏–º–∞–ª—å–Ω–æ –∂–∏–∑–Ω–µ—Å–ø–æ—Å–æ–±–Ω—ã–π –ø—Ä–æ–¥—É–∫—Ç</span>
                  </div>
                  <div className="flex items-center gap-2">
                    <span>üìã</span>
                    <span><strong>–û–ø—Ä–æ—Å</strong> ‚Äî –∏–∑—É—á–µ–Ω–∏–µ –ø–æ—Ç—Ä–µ–±–Ω–æ—Å—Ç–µ–π –∞—É–¥–∏—Ç–æ—Ä–∏–∏</span>
                  </div>
                </div>
              </div>
            </div>
          ) : (
            /* Cards View */
            <div className="grid gap-6 md:grid-cols-2 lg:grid-cols-3">
              {filtered.map((experiment) => (
                <div key={experiment.id} className="bg-white rounded-lg shadow p-6 hover:shadow-md transition-shadow">
                  <div className="flex justify-between items-start mb-4">
                    <h3 className="text-lg font-semibold text-gray-900 truncate pr-2">
                      {experiment.title}
                    </h3>
                    <span className={`px-2 py-1 text-xs rounded-full ${getStatusColor(experiment.status)}`}>
                      {getStatusText(experiment.status)}
                    </span>
                  </div>

                  <p className="text-gray-600 text-sm mb-4 line-clamp-3">
                    {experiment.description}
                  </p>

                  <div className="space-y-2 text-sm text-gray-600 mb-4">
                    <div>
                      <span className="font-medium">–ì–∏–ø–æ—Ç–µ–∑–∞:</span> {experiment.hypothesis.title}
                    </div>
                    <div>
                      <span className="font-medium">–ò–¥–µ—è:</span> {experiment.hypothesis.idea.title}
                    </div>
                    {experiment.methodology && (
                      <div>
                        <span className="font-medium">–ú–µ—Ç–æ–¥:</span> {experiment.methodology}
                      </div>
                    )}
                  </div>

                  {(experiment.startDate || experiment.endDate) && (
                    <div className="text-xs text-gray-500 mb-4">
                      {experiment.startDate && (
                        <div>–ù–∞—á–∞–ª–æ: {new Date(experiment.startDate).toLocaleDateString('ru-RU')}</div>
                      )}
                      {experiment.endDate && (
                        <div>–û–∫–æ–Ω—á–∞–Ω–∏–µ: {new Date(experiment.endDate).toLocaleDateString('ru-RU')}</div>
                      )}
                    </div>
                  )}

                  <div className="border-t pt-4">
                    <div className="flex items-center justify-between text-xs text-gray-500 mb-2">
                      <span>MVP: {experiment.mvpsCount}</span>
                      <span>–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏: {experiment.commentsCount}</span>
                    </div>
                    <div className="flex items-center justify-between">
                      <div className="text-xs text-gray-500">
                        –ê–≤—Ç–æ—Ä: {experiment.creator.name}
                      </div>
                      <div className="flex space-x-2">
                        <Link
                          href={`/experiments/${experiment.id}`}
                          className="text-blue-600 hover:text-blue-800 text-sm font-medium"
                        >
                          –ü–æ–¥—Ä–æ–±–Ω–µ–µ
                        </Link>
                        {experiment.status === 'PLANNING' && (
                          <Link
                            href={`/mvps/new?experimentId=${experiment.id}`}
                            className="text-green-600 hover:text-green-800 text-sm font-medium"
                          >
                            –°–æ–∑–¥–∞—Ç—å MVP
                          </Link>
                        )}
                      </div>
                    </div>
                  </div>
                </div>
              ))}
            </div>
          )}

          {experiments.length === 0 && !loading && (
            <div className="text-center py-12">
              <span className="text-6xl mb-4 block">üß™</span>
              <h3 className="text-lg font-medium text-gray-900 mb-2">–ü–æ–∫–∞ –Ω–µ—Ç —ç–∫—Å–ø–µ—Ä–∏–º–µ–Ω—Ç–æ–≤</h3>
              <p className="text-gray-500 mb-4">
                –°–æ–∑–¥–∞–π—Ç–µ –ø–µ—Ä–≤—ã–π —ç–∫—Å–ø–µ—Ä–∏–º–µ–Ω—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –≤–∞—à–∏—Ö –≥–∏–ø–æ—Ç–µ–∑
              </p>
              <Link
                href="/experiments/new"
                className="bg-blue-600 text-white px-6 py-3 rounded-md hover:bg-blue-700"
              >
                –°–æ–∑–¥–∞—Ç—å —ç–∫—Å–ø–µ—Ä–∏–º–µ–Ω—Ç
              </Link>
            </div>
          )}
        </div>
      </main>
    </AppLayout>
  )
}