"use client"

import { useState, useEffect } from "react"

interface MVPProgressTrackerProps {
  mvpId: string
  currentStatus: string
  type: string
}

interface Milestone {
  id: string
  title: string
  description: string
  status: "pending" | "in_progress" | "completed"
  dueDate?: string
  completedAt?: string
}

const STATUS_MILESTONES = {
  PLANNING: [
    { title: "–û–ø—Ä–µ–¥–µ–ª–∏—Ç—å —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è", description: "–°–æ–±—Ä–∞—Ç—å –∏ –ø—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è –∫ MVP" },
    { title: "–°–æ–∑–¥–∞—Ç—å —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–æ–µ –∑–∞–¥–∞–Ω–∏–µ", description: "–ü–æ–¥–≥–æ—Ç–æ–≤–∏—Ç—å –¥–µ—Ç–∞–ª—å–Ω–æ–µ —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–æ–µ –∑–∞–¥–∞–Ω–∏–µ" },
    { title: "–ü–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä—ã", description: "–°–ø—Ä–æ–µ–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä—É –∏ –≤—ã–±—Ä–∞—Ç—å —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–∏" },
    { title: "–û—Ü–µ–Ω–∫–∞ —Ä–µ—Å—É—Ä—Å–æ–≤", description: "–û–ø—Ä–µ–¥–µ–ª–∏—Ç—å –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ —Ä–µ—Å—É—Ä—Å—ã –∏ –≤—Ä–µ–º–µ–Ω–Ω—ã–µ —Ä–∞–º–∫–∏" }
  ],
  DEVELOPMENT: [
    { title: "–ù–∞—Å—Ç—Ä–æ–π–∫–∞ –æ–∫—Ä—É–∂–µ–Ω–∏—è", description: "–ü–æ–¥–≥–æ—Ç–æ–≤–∏—Ç—å —Å—Ä–µ–¥—É —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏ –∏ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã" },
    { title: "–ë–∞–∑–æ–≤–∞—è —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç—å", description: "–†–µ–∞–ª–∏–∑–æ–≤–∞—Ç—å –∫–ª—é—á–µ–≤—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ MVP" },
    { title: "–ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤", description: "–°–≤—è–∑–∞—Ç—å –≤—Å–µ —á–∞—Å—Ç–∏ —Å–∏—Å—Ç–µ–º—ã –≤–æ–µ–¥–∏–Ω–æ" },
    { title: "–ü–µ—Ä–≤–∏—á–Ω–æ–µ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ", description: "–ü—Ä–æ–≤–µ—Å—Ç–∏ –±–∞–∑–æ–≤—ã–µ —Ç–µ—Å—Ç—ã —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç–∏" }
  ],
  TESTING: [
    { title: "–§—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ–µ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ", description: "–ü—Ä–æ—Ç–µ—Å—Ç–∏—Ä–æ–≤–∞—Ç—å –≤—Å–µ —Ñ—É–Ω–∫—Ü–∏–∏ MVP" },
    { title: "–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–æ–µ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ", description: "–ü—Ä–æ–≤–µ—Å—Ç–∏ —Ç–µ—Å—Ç—ã —Å —Ä–µ–∞–ª—å–Ω—ã–º–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏" },
    { title: "–ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –±–∞–≥–æ–≤", description: "–£—Å—Ç—Ä–∞–Ω–∏—Ç—å –Ω–∞–π–¥–µ–Ω–Ω—ã–µ –ø—Ä–æ–±–ª–µ–º—ã" },
    { title: "–ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –∫ —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏—é", description: "–§–∏–Ω–∞–ª—å–Ω–∞—è –ø–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –∫ –∑–∞–ø—É—Å–∫—É" }
  ],
  DEPLOYED: [
    { title: "–†–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏–µ", description: "–ó–∞–ø—É—Å–∫ MVP –≤ –ø—Ä–æ–¥–∞–∫—à–µ–Ω —Å—Ä–µ–¥–µ" },
    { title: "–ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥", description: "–û—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏–µ —Ä–∞–±–æ—Ç—ã –∏ –º–µ—Ç—Ä–∏–∫" },
    { title: "–°–±–æ—Ä –æ–±—Ä–∞—Ç–Ω–æ–π —Å–≤—è–∑–∏", description: "–ü–æ–ª—É—á–µ–Ω–∏–µ –æ—Ç–∑—ã–≤–æ–≤ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π" },
    { title: "–ê–Ω–∞–ª–∏–∑ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤", description: "–ê–Ω–∞–ª–∏–∑ –¥–∞–Ω–Ω—ã—Ö –∏ –ø–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –≤—ã–≤–æ–¥–æ–≤" }
  ]
}

export default function MVPProgressTracker({ mvpId, currentStatus, type }: MVPProgressTrackerProps) {
  const [milestones, setMilestones] = useState<Milestone[]>([])
  const [loading, setLoading] = useState(true)

  useEffect(() => {
    generateMilestones()
  }, [currentStatus, type])

  const generateMilestones = () => {
    const statusMilestones = STATUS_MILESTONES[currentStatus as keyof typeof STATUS_MILESTONES] || []

    const generatedMilestones: Milestone[] = statusMilestones.map((milestone, index) => ({
      id: `milestone-${currentStatus}-${index}`,
      title: milestone.title,
      description: milestone.description,
      status: index === 0 ? "in_progress" : "pending"
    }))

    setMilestones(generatedMilestones)
    setLoading(false)
  }

  const toggleMilestoneStatus = (milestoneId: string) => {
    setMilestones(prev => prev.map(milestone => {
      if (milestone.id === milestoneId) {
        const newStatus = milestone.status === "completed" ? "pending" : "completed"
        return {
          ...milestone,
          status: newStatus,
          completedAt: newStatus === "completed" ? new Date().toISOString() : undefined
        }
      }
      return milestone
    }))
  }

  const getStatusIcon = (status: string) => {
    switch (status) {
      case "completed": return "‚úÖ"
      case "in_progress": return "üîÑ"
      case "pending": return "‚è≥"
      default: return "‚è≥"
    }
  }

  const getStatusColor = (status: string) => {
    switch (status) {
      case "completed": return "bg-green-50 border-green-200"
      case "in_progress": return "bg-blue-50 border-blue-200"
      case "pending": return "bg-gray-50 border-gray-200"
      default: return "bg-gray-50 border-gray-200"
    }
  }

  const completedCount = milestones.filter(m => m.status === "completed").length
  const totalCount = milestones.length
  const progressPercentage = totalCount > 0 ? (completedCount / totalCount) * 100 : 0

  if (loading) {
    return (
      <div className="bg-white rounded-xl shadow-lg p-6 border border-gray-100">
        <div className="text-center py-4">–ó–∞–≥—Ä—É–∑–∫–∞ –ø—Ä–æ–≥—Ä–µ—Å—Å–∞...</div>
      </div>
    )
  }

  return (
    <div className="bg-white rounded-xl shadow-lg p-6 border border-gray-100">
      <div className="flex justify-between items-center mb-6">
        <h3 className="text-xl font-semibold text-gray-900 flex items-center">
          <span className="text-2xl mr-2">üìã</span>
          –ü—Ä–æ–≥—Ä–µ—Å—Å —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏
        </h3>
        <div className="text-right">
          <div className="text-sm text-gray-600">–ó–∞–≤–µ—Ä—à–µ–Ω–æ</div>
          <div className="text-lg font-semibold text-blue-600">
            {completedCount} –∏–∑ {totalCount}
          </div>
        </div>
      </div>

      {/* Progress Bar */}
      <div className="mb-6">
        <div className="flex justify-between text-sm text-gray-600 mb-2">
          <span>–û–±—â–∏–π –ø—Ä–æ–≥—Ä–µ—Å—Å</span>
          <span>{Math.round(progressPercentage)}%</span>
        </div>
        <div className="w-full bg-gray-200 rounded-full h-3">
          <div
            className="bg-blue-600 h-3 rounded-full transition-all duration-300 ease-out"
            style={{ width: `${progressPercentage}%` }}
          ></div>
        </div>
      </div>

      {/* Stage Info */}
      <div className="bg-blue-50 rounded-lg p-4 mb-6">
        <h4 className="font-medium text-blue-900 mb-2 flex items-center">
          <span className="mr-2">üéØ</span>
          –¢–µ–∫—É—â–∏–π —ç—Ç–∞–ø: {getStageTitle(currentStatus)}
        </h4>
        <p className="text-sm text-blue-700">
          {getStageDescription(currentStatus)}
        </p>
      </div>

      {/* Milestones */}
      <div className="space-y-3">
        <h4 className="font-medium text-gray-900 mb-3">–û—Å–Ω–æ–≤–Ω—ã–µ –≤–µ—Ö–∏ —ç—Ç–∞–ø–∞:</h4>
        {milestones.map((milestone, index) => (
          <div
            key={milestone.id}
            className={`border-2 rounded-lg p-4 transition-all duration-200 cursor-pointer hover:shadow-sm ${getStatusColor(milestone.status)}`}
            onClick={() => toggleMilestoneStatus(milestone.id)}
          >
            <div className="flex items-start justify-between">
              <div className="flex items-start space-x-3 flex-1">
                <span className="text-xl flex-shrink-0 mt-0.5">
                  {getStatusIcon(milestone.status)}
                </span>
                <div className="flex-1">
                  <h5 className={`font-medium ${milestone.status === 'completed' ? 'line-through text-gray-500' : 'text-gray-900'}`}>
                    {milestone.title}
                  </h5>
                  <p className="text-sm text-gray-600 mt-1">
                    {milestone.description}
                  </p>
                  {milestone.completedAt && (
                    <p className="text-xs text-green-600 mt-2">
                      ‚úì –ó–∞–≤–µ—Ä—à–µ–Ω–æ: {new Date(milestone.completedAt).toLocaleString('ru-RU')}
                    </p>
                  )}
                </div>
              </div>
              <div className="text-xs text-gray-500 ml-4">
                {index + 1}/{totalCount}
              </div>
            </div>
          </div>
        ))}
      </div>

      {/* Tips */}
      <div className="mt-6 bg-purple-50 rounded-lg p-4">
        <h4 className="font-medium text-purple-900 mb-2 flex items-center">
          <span className="mr-2">üí°</span>
          –°–æ–≤–µ—Ç—ã –¥–ª—è —Ç–µ–∫—É—â–µ–≥–æ —ç—Ç–∞–ø–∞:
        </h4>
        <ul className="text-sm text-purple-700 space-y-1">
          {getStageTips(currentStatus).map((tip, index) => (
            <li key={index}>‚Ä¢ {tip}</li>
          ))}
        </ul>
      </div>
    </div>
  )
}

function getStageTitle(status: string): string {
  switch (status) {
    case "PLANNING": return "–ü–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ"
    case "DEVELOPMENT": return "–†–∞–∑—Ä–∞–±–æ—Ç–∫–∞"
    case "TESTING": return "–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ"
    case "DEPLOYED": return "–†–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏–µ"
    case "ARCHIVED": return "–ê—Ä—Ö–∏–≤–∏—Ä–æ–≤–∞–Ω"
    default: return status
  }
}

function getStageDescription(status: string): string {
  switch (status) {
    case "PLANNING": return "–≠—Ç–∞–ø –¥–µ—Ç–∞–ª—å–Ω–æ–≥–æ –ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—è –∏ –ø—Ä–æ–µ–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è MVP"
    case "DEVELOPMENT": return "–ê–∫—Ç–∏–≤–Ω–∞—è —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∞ —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç–∏ MVP"
    case "TESTING": return "–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∏ –æ—Ç–ª–∞–¥–∫–∞ MVP –ø–µ—Ä–µ–¥ –∑–∞–ø—É—Å–∫–æ–º"
    case "DEPLOYED": return "MVP –∑–∞–ø—É—â–µ–Ω –∏ —Å–æ–±–∏—Ä–∞—é—Ç—Å—è –¥–∞–Ω–Ω—ã–µ –æ –µ–≥–æ —Ä–∞–±–æ—Ç–µ"
    case "ARCHIVED": return "MVP –∑–∞–≤–µ—Ä—à–µ–Ω –∏ –∞—Ä—Ö–∏–≤–∏—Ä–æ–≤–∞–Ω"
    default: return "–≠—Ç–∞–ø —Ä–∞–±–æ—Ç—ã –Ω–∞–¥ MVP"
  }
}

function getStageTips(status: string): string[] {
  switch (status) {
    case "PLANNING":
      return [
        "–û–ø—Ä–µ–¥–µ–ª–∏—Ç–µ –º–∏–Ω–∏–º–∞–ª—å–Ω—ã–π –Ω–∞–±–æ—Ä —Ñ—É–Ω–∫—Ü–∏–π –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –≥–∏–ø–æ—Ç–µ–∑—ã",
        "–ü—Ä–æ–≤–µ–¥–∏—Ç–µ –∏–Ω—Ç–µ—Ä–≤—å—é —Å –ø–æ—Ç–µ–Ω—Ü–∏–∞–ª—å–Ω—ã–º–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏",
        "–í—ã–±–µ—Ä–∏—Ç–µ –ø—Ä–æ—Å—Ç—ã–µ –∏ –±—ã—Å—Ç—Ä—ã–µ —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–∏ –¥–ª—è —Ä–µ–∞–ª–∏–∑–∞—Ü–∏–∏"
      ]
    case "DEVELOPMENT":
      return [
        "–§–æ–∫—É—Å–∏—Ä—É–π—Ç–µ—Å—å —Ç–æ–ª—å–∫–æ –Ω–∞ –∫–ª—é—á–µ–≤–æ–π —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç–∏",
        "–î–µ–ª–∞–π—Ç–µ —á–∞—Å—Ç—ã–µ –∫–æ–º–º–∏—Ç—ã –∏ –±—ç–∫–∞–ø—ã –∫–æ–¥–∞",
        "–†–µ–≥—É–ª—è—Ä–Ω–æ —Ç–µ—Å—Ç–∏—Ä—É–π—Ç–µ –≤ –ø—Ä–æ—Ü–µ—Å—Å–µ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏"
      ]
    case "TESTING":
      return [
        "–ü—Ä–∏–≤–ª–µ–∫–∏—Ç–µ —Ä–µ–∞–ª—å–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è",
        "–§–∏–∫—Å–∏—Ä—É–π—Ç–µ –≤—Å–µ –Ω–∞–π–¥–µ–Ω–Ω—ã–µ –±–∞–≥–∏ –∏ –ø—Ä–æ–±–ª–µ–º—ã UX",
        "–ü–æ–¥–≥–æ—Ç–æ–≤—å—Ç–µ –ø–ª–∞–Ω —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏—è –∏ –æ—Ç–∫–∞—Ç–∞"
      ]
    case "DEPLOYED":
      return [
        "–ù–∞—Å—Ç—Ä–æ–π—Ç–µ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –∫–ª—é—á–µ–≤—ã—Ö –º–µ—Ç—Ä–∏–∫",
        "–°–æ–±–∏—Ä–∞–π—Ç–µ –æ–±—Ä–∞—Ç–Ω—É—é —Å–≤—è–∑—å –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π",
        "–ì–æ—Ç–æ–≤—å—Ç–µ—Å—å –∫ –±—ã—Å—Ç—Ä—ã–º –∏—Ç–µ—Ä–∞—Ü–∏—è–º –Ω–∞ –æ—Å–Ω–æ–≤–µ –¥–∞–Ω–Ω—ã—Ö"
      ]
    default:
      return ["–°–ª–µ–¥—É–π—Ç–µ –ø–ª–∞–Ω—É –∏ –Ω–µ –∑–∞–±—ã–≤–∞–π—Ç–µ –ø—Ä–æ —Ü–µ–ª–∏ MVP"]
  }
}